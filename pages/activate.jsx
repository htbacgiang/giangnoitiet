// pages/activate.js
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { FaArrowLeft, FaCheckCircle, FaSpinner } from 'react-icons/fa';

export default function ActivateAccount() {
  const router = useRouter();
  const { token } = router.query;
  const [message, setMessage] = useState('');
  const [isLoading, setIsLoading] = useState(true);
  const [isSuccess, setIsSuccess] = useState(false);

  useEffect(() => {
    if (token) {
      setIsLoading(true);
      fetch('/api/auth/activate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ token }),
      })
        .then((res) => res.json())
        .then((data) => {
          setMessage(data.message);
          setIsSuccess(data.success || data.message.includes('th√†nh c√¥ng'));
          setIsLoading(false);
        })
        .catch(() => {
          setMessage('C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.');
          setIsSuccess(false);
          setIsLoading(false);
        });
    } else {
      setIsLoading(false);
    }
  }, [token]);

  return (
    <>
      <Head>
        <title>K√≠ch ho·∫°t t√†i kho·∫£n | Giang N·ªôi Ti·∫øt</title>
        <meta
          name="description"
          content="T√†i kho·∫£n Giang N·ªôi Ti·∫øt c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t th√†nh c√¥ng. Kh√°m ph√° d·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe n·ªôi ti·∫øt chuy√™n nghi·ªáp, b·∫£o v·ªá s·ª©c kh·ªèe gia ƒë√¨nh b·∫°n."
        />
        <meta
          name="keywords"
          content="Giang N·ªôi Ti·∫øt, n·ªôi ti·∫øt, t√†i kho·∫£n k√≠ch ho·∫°t, chƒÉm s√≥c s·ª©c kh·ªèe, b·ªánh n·ªôi ti·∫øt, ti·ªÉu ƒë∆∞·ªùng, tuy·∫øn gi√°p"
        />
        <link rel="canonical" href="https://giangnoitiet.vn/activate" />
        {/* Open Graph */}
        <meta
          property="og:title"
          content="K√≠ch ho·∫°t t√†i kho·∫£n | Giang N·ªôi Ti·∫øt"
        />
        <meta
          property="og:description"
          content="T√†i kho·∫£n Giang N·ªôi Ti·∫øt c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t th√†nh c√¥ng. Kh√°m ph√° d·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe n·ªôi ti·∫øt chuy√™n nghi·ªáp, b·∫£o v·ªá s·ª©c kh·ªèe gia ƒë√¨nh b·∫°n."
        />
        <meta property="og:url" content="https://giangnoitiet.vn/activate" />
        <meta property="og:type" content="website" />
        <meta
          property="og:image"
          content="https://giangnoitiet.vn/logo-giang-noi-tiet.png"
        />
        <meta
          property="og:image:alt"
          content="K√≠ch ho·∫°t t√†i kho·∫£n Giang N·ªôi Ti·∫øt"
        />
      </Head>
      
      {/* Simple Clean Background */}
      <div className="min-h-screen bg-gray-50">
        {/* Main Content Container */}
        <div className="min-h-screen flex items-center justify-center px-4 py-12">
          <div className="max-w-2xl mx-auto w-full">
            
            {/* Loading State */}
            {isLoading && (
              <div className="text-center">
                <div className="bg-white rounded-lg shadow-lg p-8">
                  <div className="animate-spin text-4xl text-green-500 mb-4 flex justify-center">
                    <FaSpinner />
                  </div>
                  <h2 className="text-xl font-semibold text-gray-800 mb-2">
                    ƒêang k√≠ch ho·∫°t t√†i kho·∫£n...
                  </h2>
                  <p className="text-gray-600">Vui l√≤ng ch·ªù trong gi√¢y l√°t</p>
                </div>
              </div>
            )}

            {/* Success/Error State */}
            {!isLoading && (
              <div className="text-center">
                <div className="bg-white rounded-lg shadow-lg p-8">
                  
                  {/* Status Icon */}
                  <div className="mb-6">
                    {isSuccess ? (
                      <div className="text-5xl text-green-500 mb-4 flex justify-center">
                        <FaCheckCircle />
                      </div>
                    ) : (
                      <div className="text-5xl text-red-500 mb-4 flex justify-center">
                        ‚ùå
                      </div>
                    )}
                  </div>

                  {/* Main Heading */}
                  <h1 className="text-2xl md:text-3xl font-bold text-gray-800 mb-6">
                    {isSuccess ? 
                      'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Giang N·ªôi Ti·∫øt!' : 
                      'K√≠ch ho·∫°t kh√¥ng th√†nh c√¥ng'
                    }
                  </h1>

                  {/* Message */}
                  {message && (
                    <div className={`p-4 rounded-lg mb-6 ${
                      isSuccess ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'
                    }`}>
                      <p className={`${isSuccess ? 'text-green-800' : 'text-red-800'}`}>
                        {message}
                      </p>
                    </div>
                  )}

                  {/* Success Description */}
                  {isSuccess && (
                    <div className="mb-6">
                      <p className="text-gray-700 leading-relaxed mb-6">
                        T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t th√†nh c√¥ng! Ch√∫ng t√¥i r·∫•t vui khi b·∫°n ƒë√£ ch·ªçn 
                        gia nh·∫≠p c·ªông ƒë·ªìng Giang N·ªôi Ti·∫øt - n∆°i cung c·∫•p d·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe n·ªôi ti·∫øt 
                        chuy√™n nghi·ªáp, an to√†n cho s·ª©c kh·ªèe c·ªßa b·∫°n v√† gia ƒë√¨nh.
                      </p>
                  
                    </div>
                  )}

                  {/* Action Buttons */}
                  <div className="flex flex-col sm:flex-row gap-3 justify-center">
                    <Link
                      href="/"
                      className="inline-flex items-center justify-center bg-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-green-700 transition-colors"
                    >
                      <FaArrowLeft className="mr-2" />
                      V·ªÅ Trang Ch·ªß
                    </Link>
                    
                    {isSuccess && (
                      <Link
                        href="/dang-nhap"
                        className="inline-flex items-center justify-center bg-white text-green-600 px-6 py-3 rounded-lg font-semibold border-2 border-green-600 hover:bg-green-600 hover:text-white transition-colors"
                      >
                        ƒêƒÉng Nh·∫≠p
                        <span className="ml-2">üöÄ</span>
                      </Link>
                    )}
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}
